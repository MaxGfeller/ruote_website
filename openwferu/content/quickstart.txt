---
title: quickstart
filter:
  - erb
  - textile
---

h2. quickstart

The "simple.rb":http://github.com/jmettraux/ruote/blob/master/examples/simple.rb quickstart is probably too simple.

The "flickr quickstart":#flickr polls users about random pictures found on Flickr.

The "mini todo tool quickstart":#todo uses a workitem to store a todo list and iterates until the list is entirely checked (1 participant involved). Warning : this quickstart is a bit rough.


h3. <a name="flickr"></a>the flickr quickstart

Here is a tiny process that fetches picture info from "http://flickr.com":http://flickr.com and submit it to three user, working concurrently on choosing their favourite photo.

Three human participants and two automated participants are involved (though for the sake of brevity, our human participants are represented by a random number generator)

This example is inspired by Amazon's mechanical turk, where one example of workflow uses human participants to tell whether a set of pictures contains the photo of a tree or an animal, etc...

To run this example, you have at first to install the ruote gem (and the atom-tools one) :

<pre>
sudo gem install ruote atom-tools
</pre>

Then, to download and run the quickstart (Ruby 1.8.6 at least) :

<pre>
curl http://gist.github.com/raw/35914/d7bf829870c1a24eac7ac78be41d71535f8c8f48 > qs.rb
ruby qs.rb
</pre>

That should generate an output like :

<pre>
 users selected those images : 

 - user-charly :: http://www.flickr.com/photos/ssami/3105506108/
 - user-bob :: http://www.flickr.com/photos/30211958@N00/3106452587/
 - user-alice :: http://www.flickr.com/photos/mynamemeanseyes/3098673543/
</pre>

If not, you'll find some help on the "user's mailing list":http://groups.google.com/group/openwferu-users or on the #ruote channel on freenode.net

Here is the source of the quickstart :

<script src="http://gist.github.com/35914.js"></script>

&nbsp;


h3.  <a name="todo"></a>the mini todo tool quickstart

Warning : this process is a bit rough, but it may probably help some of you understand Ruote. It's in fact a special case (1 participant, 1 loop).

This quickstart was initially mentioned in this "blog post":http://jmettraux.wordpress.com/2008/12/15/mini-todo-tool/

The whole quickstart can be found at "http://gist.github.com/35894":http://gist.github.com/35894

The process definition boils down to :

<% coderay(:lang => 'ruby', :line_numbers => "inline") do -%>
class MyTodoProcess < OpenWFE::ProcessDefinition
  cursor do
    perform_task
    continue :unless => "${f:over}"
  end
end
<% end -%>

It's a "cursor":http://openwferu.rubyforge.org/expressions.html#exp_cursor that gets rewound until the todos are all checked.

The unique participant is named 'perform_task'. It simply presents the user on the console with a list of tasks to perform, accepts new tasks, marks tasks as checked. At the end of each of his run, the participant determines whether all tasks have been performed and sets the value of the field 'over' accordingly.

Ruote is meant to be stoppable and restartable, the tricky part of this example is that, since it's a console example, each time the Ruby runtime gets stopped, the process is stuck in a suspended state. At restart, the process instance has to get re-ignited via a 'replay_at_error' call. (That's something very advanced, you shouldn't have to care about that unless you're building a similar console-driven process).

