---
title: quickstart
---

h2. ruote quickstart

Ruote 2.1 is mainly tested with Ruby 1.9.1 but seems to run fine with Ruby 1.8.7.

This quickstart aims at showing a minimal process instance run. It's a limited example.


h3. getting ruote 2.1

Provided that you have a recent version of "git":http://progit.org/book/ch1-4.html, you can do from your command line :

<pre>
git clone git://github.com/jmettraux/ruote.git
cd ruote
git checkout ruote2.1
rake build
gem install pkg/ruote-2.1.9.gem
</pre>

Installing as a gem will draw in the necessary gem dependencies, except a JSON gem.

<pre>
# if you're using C (MRI) Ruby :
gem install yajl-ruby

# if you're using JRuby :
gem install json-jruby

# on windows :
gem install json_pure
</pre>


h3. first run

This piece of code passes a workitem from participant Alpha to participant Bravo :

<pre class="brush: ruby">
require 'rubygems'
require 'ruote'
require 'ruote/storage/fs_storage'

# preparing the engine

engine = Ruote::Engine.new(
  Ruote::Worker.new(
    Ruote::FsStorage.new("ruote_work")))

# registering participants
#
# two simplistic "block participants"
#
# 'alpha' adds a piece of information to the workitem, while 'bravo'
# outputs that same part of that information

engine.register_participant :alpha do |workitem|
  workitem.fields['message'] = { 'text' => 'hello !', 'author' => 'Alice' }
end

engine.register_participant :bravo do |workitem|
  puts "I received a message from #{workitem.fields['message']['author']}"
end

# defining a process

pdef = Ruote.process_definition :name => 'test' do
  sequence do
    participant :alpha
    participant :bravo
  end
end

# launching, creating a process instance

wfid = engine.launch(pdef)

engine.wait_for(wfid)
  # blocks current thread until our process instance terminates

# => 'I received a message from Alice'
</pre>

This quickstart can be found in examples/ruote_quickstart.rb

Run it with :

<pre>
ruby examples/ruote_quickstart.rb
</pre>

It will exit after the process instance terminated.

